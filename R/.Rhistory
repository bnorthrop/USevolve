# names(partycolor[1]) <- "republican"
# partycolor[2] <- "blue2"
# names(partycolor[2]) <- "democrat"
}
if(label=="party"){
names(partycolor) <- unique(state_majority$party)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority88, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
## FILL ISSUE IS IN SCALE FILL MANUAL ALPHABETICAL ORDER
else{
names(partycolor) <- unique(state_majority$candidate)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual("Candidate",
values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
# if(state_majority$party[[1]]=="republican"){
#
# }
#
# ggplot()+
#   geom_map(data=state_map, aes(map_id= region), map = state_map) +
#   geom_map(data=state_majority88, aes(map_id= region, fill=candidate), map = state_map) +
#   expand_limits(x = state_map$long, y = state_map$lat) +
#   scale_fill_manual("Candidate", breaks = state_majority88$candidate,
#                     values = partycolor) +
#   coord_map("albers", lat0=30, lat1=40) +
#   ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
Year=2016
state_majority_alphabet <- state_majority[order(state_majority$candidate), ]
Year=2016
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority_alphabet <- state_majority[order(state_majority$candidate), ]
View(state_majority_alphabet)
state_majority_alphabet$party[[1]]
partycolor <- c("blue2", "red1")
names(partycolor) <- unique(state_majority$party)
names(partycolor) <- unique(state_majority_alphabet$party)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
names(partycolor) <- unique(state_majority_alphabet$candidate)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual("Candidate",
values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority_alphabet <- state_majority[order(state_majority$candidate), ]
if(state_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
# partycolor[1] <- "blue2"
# names(partycolor[1]) <- "democrat"
# partycolor[2] <- "red1"
# names(partycolor[2]) <- "republican"
}
else if(state_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
# partycolor[1] <- "red1"
# names(partycolor[1]) <- "republican"
# partycolor[2] <- "blue2"
# names(partycolor[2]) <- "democrat"
}
if(label=="party"){
names(partycolor) <- unique(state_majority_alphabet$party)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
## FILL ISSUE IS IN SCALE FILL MANUAL ALPHABETICAL ORDER
else{
names(partycolor) <- unique(state_majority_alphabet$candidate)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual("Candidate",
values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
# if(state_majority$party[[1]]=="republican"){
#
# }
#
# ggplot()+
#   geom_map(data=state_map, aes(map_id= region), map = state_map) +
#   geom_map(data=state_majority88, aes(map_id= region, fill=candidate), map = state_map) +
#   expand_limits(x = state_map$long, y = state_map$lat) +
#   scale_fill_manual("Candidate", breaks = state_majority88$candidate,
#                     values = partycolor) +
#   coord_map("albers", lat0=30, lat1=40) +
#   ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner(Year = 1988)
state_winner(Year = 2000, states=c("texas", "oklahoma"))
state_winner(Year = 2000, states=c("texas", "oklahoma"), label="party")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority_alphabet <- state_majority[order(state_majority$candidate), ]
if(state_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
}
else if(state_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
}
if(label=="party"){
names(partycolor) <- unique(state_majority_alphabet$party)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
names(partycolor) <- unique(state_majority_alphabet$candidate)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual("Candidate",
values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner(Year = 1988)
state_winner(Year = 2000, states=c("texas", "oklahoma"))
state_winner(Year = 2008)
state_winner(Year = 2004)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
View(county_pres)
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
county_pres$candidate[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
# Create Function
county_winner <- function(Year=2016, states=c(), label="candidate"){
county_winner <- function(Year=2016, states=c(), label="candidate"){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
county_pres$candidate[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
county_majority_alphabet <- county_majority[order(county_majority$candidate), ]
if(county_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
}
else if(county_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
}
if(label=="party"){
names(partycolor) <- unique(county_majority_alphabet$party)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
names(partycolor) <- unique(county_majority_alphabet$candidate)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=candidate), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 2000")
}
}
county_winner <- function(Year=2016, states=c(), label="candidate"){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
county_pres$candidate[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
county_majority_alphabet <- county_majority[order(county_majority$candidate), ]
if(county_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
}
else if(county_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
}
if(label=="party"){
names(partycolor) <- unique(county_majority_alphabet$party)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
names(partycolor) <- unique(county_majority_alphabet$candidate)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=candidate), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 2000")
}
}
# Create Function
county_winner <- function(Year=2016, states=c(), label="candidate"){
county_winner <- function(Year=2016, states=c(), label="candidate"){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
county_pres$candidate[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
county_majority_alphabet <- county_majority[order(county_majority$candidate), ]
if(county_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
}
else if(county_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
}
if(label=="party"){
names(partycolor) <- unique(county_majority_alphabet$party)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
names(partycolor) <- unique(county_majority_alphabet$candidate)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=candidate), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 2000")
}
}
library(dplyr)
library(ggplot2)
library(maps)
library(devtools)
county_winner <- function(Year=2016, states=c(), label="candidate"){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
county_pres$candidate[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
county_majority_alphabet <- county_majority[order(county_majority$candidate), ]
if(county_majority_alphabet$party[[1]]=="democrat"){
partycolor <- c("blue2", "red1")
}
else if(county_majority_alphabet$party[[1]]=="republican"){
partycolor <- c("red1", "blue2")
}
if(label=="party"){
names(partycolor) <- unique(county_majority_alphabet$party)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
names(partycolor) <- unique(county_majority_alphabet$candidate)
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=candidate), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "Candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 2000")
}
}
county_winner()
county_winner(label="party")
county_winner(Year = 2008)
county_winner(Year = 2000, states=c("texas", "oklahoma"))
county_winner(Year = 2008, states="california")
