filter(region %in% states)
state_majority <- statepres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map")
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
elect_count <- function(level="state", Year, states=c(), log=TRUE){
require(dplyr)
require(ggplot2)
require(maps)
# Load map data
state_map <- read.csv("data/state_map.csv")
county_map <- read.csv("data/county_map.csv")
# Load data used to fill map
statepres <- read.csv("data/3 state president.csv")
countrypres <- read.csv("data/2 county president.csv")
if (level=="state" & missing(Year)){
Year=2016 }
if (level=="state"){
election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016) }
if(level=="county"){
Year=2016
election_years <- c(2000, 2004, 2008, 2012, 2016) }
if(Year %in% election_years){
if(level=="county"){
if (length(states)==0){
filtered_map <- county_map
filtered_results <- countypres %>%
filter(year==Year) %>%
group_by(region) }
else {
filtered_map <- county_map %>%
filter(state %in% states)
filtered_results <- countypres %>%
filter(state %in% states, year==Year) %>%
group_by(region) }
}
if(level=="state"){
if (length(states)==0){
filtered_map <- state_map
filtered_results <- statepres %>%
filter(year==Year) %>%
group_by(region)
} else{
filtered_map <- state_map %>%
filter(state %in% states)
filtered_results <- statepres %>%
filter(state %in% states, year==Year) %>%
group_by(region) }
}
}
else if (Year == 2020){
stop("Data not yet available") }
else if (Year %in% 2020 == F){
stop("Must enter a valid election year for region") }
if(log==FALSE){
ggplot()+
geom_map(data=filtered_map, aes(map_id= region), map = filtered_map) +
geom_map(data=filtered_results, aes(map_id= region, fill=totalvotes), map = filtered_map) +
expand_limits(x = filtered_map$long, y = filtered_map$lat) +
scale_fill_distiller("Voter Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Count Map") }
else{
ggplot()+
geom_map(data=filtered_map, aes(map_id= region), map = filtered_map) +
geom_map(data=filtered_results, aes(map_id= region, fill=totalvotes), map = filtered_map) +
expand_limits(x = filtered_map$long, y = filtered_map$lat) +
scale_fill_distiller("Voter Count (Log)", palette="YlOrRd", direction=1, trans="log") +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Count Map") }
}
elect_count()
elect_count(Year=2000, log=F)
# Create Function
county_winner <- function(Year=2016, states=c()){
require(maps)
require(dplyr)
require(ggplot2)
#load data from data folder
county_map <- read.csv("data/county_map.csv")
countypres <- read.csv("data/2 county president.csv")
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
countypres <- na.omit(countypres)
countypres$party[countypres$party != "democrat" & countypres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(countypres$party)
###########
if(length(states)==0){
county_majority <- countypres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- countypres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map")
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 2000")
}
}
county_winner()
# Make function
time_growth <- function(data=covid, state=c(), sum=FALSE, df_print=TRUE){
require(dplyr)
require(ggplot2)
#load data from data folder
covid <- read.csv("data/US Covid (to Nov8).csv")
covid$date <- as.Date(covid$date, format = "%Y-%m-%d")
if(sum==TRUE){
filtered_data <- data %>%
filter(region %in% state) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Growth over Time (combined by state)") + xlab("Date") + ylab("Count")
}
else{
filtered_data <- data %>%
filter(region %in% state)
returned_data <- filtered_data %>%
select(date, region, tot_cases, new_case, tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Growth over Time (by state)") + xlab("Date") + ylab("Count")
}
}
time_growth(state="colorado")
time_growth(state="colorado", df_print=F)
time_growth(state=c("colorado", "nevada"), sum=T)
time_growth(state=c("colorado", "nevada"))
time_growth(state=c("colorado", "nevada", "florida", "california"), df_print=F)
use_mit_license()
`use_mit_license()`
library(usethis)
use_mit_license()
use_mit_license("Blake Northrop")
# Make function
time_growth <- function(data=covid, state=c(), sum=FALSE, df_print=TRUE){
require(dplyr)
require(ggplot2)
#load data from data folder
covid <- read.csv("data/US Covid (to Nov8).csv")
covid$date <- as.Date(covid$date, format = "%Y-%m-%d")
if(sum==TRUE){
filtered_data <- data %>%
filter(region %in% state) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Growth over Time (combined by state)") + xlab("Date") + ylab("Count")
}
else{
filtered_data <- data %>%
filter(region %in% state)
returned_data <- filtered_data %>%
select(date, region, tot_cases, new_case, tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Growth over Time (by state)") + xlab("Date") + ylab("Count")
}
}
time_growth(df_print=F, sum=T)
# Make function
time_growth <- function(data=covid, state=c(), sum=FALSE, df_print=TRUE){
require(dplyr)
require(ggplot2)
#load data from data folder
covid <- read.csv("data/US Covid (to Nov8).csv")
covid$date <- as.Date(covid$date, format = "%Y-%m-%d")
if(sum==TRUE){
if(length(state)==0){
filtered_data <- data %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
} else{
filtered_data <- data %>%
filter(region %in% state) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
}
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Growth over Time (combined by state)") + xlab("Date") + ylab("Count")
}
else{
if (length(stat)==0){
filtered_data <- data
} else{
filtered_data <- data %>%
filter(region %in% state)
}
returned_data <- filtered_data %>%
select(date, region, tot_cases, new_case, tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Growth over Time (by state)") + xlab("Date") + ylab("Count")
}
}
time_growth(df_print=F, sum=T)
time_growth(state="colorado")
time_growth(state="colorado", df_print=F)
time_growth(state=c("colorado", "nevada"), sum=T)
time_growth(state=c("colorado", "nevada"))
time_growth(state=c("colorado", "nevada", "florida", "california"), df_print=F)
# Make function
time_growth <- function(data=covid, states=c(), sum=FALSE, df_print=TRUE){
require(dplyr)
require(ggplot2)
#load data from data folder
covid <- read.csv("data/US Covid (to Nov8).csv")
covid$date <- as.Date(covid$date, format = "%Y-%m-%d")
if(sum==TRUE){
if(length(states)==0){
filtered_data <- data %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
} else{
filtered_data <- data %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases))
}
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Growth over Time (combined by state)") + xlab("Date") + ylab("Count")
}
else{
if (length(states)==0){
filtered_data <- data
} else{
filtered_data <- data %>%
filter(region %in% states)
}
returned_data <- filtered_data %>%
select(date, region, tot_cases, new_case, tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Growth over Time (by state)") + xlab("Date") + ylab("Count")
}
}
time_growth(df_print=F, sum=T)
time_growth(states="colorado")
time_growth(states="colorado", df_print=F)
time_growth(states=c("colorado", "nevada"), sum=T)
time_growth(states=c("colorado", "nevada"))
time_growth(df_print=F)
time_growth(sum=T)
library(pkgdown)
library(USevolve)
build_site()
library(USevolve)
build_site()
library(ggplot2)
library(dplyr)
library(covid19.analytics)
library(reshape2)
testdata <- covid19.US.data()
testdata <- testdata %>% select(-c(Country_Region, Lat, Long_))
test_long <- testdata %>% melt(id.vars="Province_State")
test_long <- rename(test_long,
state = Province_State,
date = variable,
day_cases = value)
test_long$state <- tolower(test_long)
View(test_long)
library(ggplot2)
library(dplyr)
library(covid19.analytics)
library(reshape2)
testdata <- covid19.US.data()
testdata <- testdata %>% select(-c(Country_Region, Lat, Long_))
test_long <- testdata %>% melt(id.vars="Province_State")
test_long <- rename(test_long,
state = Province_State,
date = variable,
day_cases = value)
# test_long$state <- tolower(test_long)
test_long <- test_long %>%
group_by(state, date) %>%
mutate(state_total = sum(day_cases))
test_long$date <- as.Date(test_long$date, format = "%Y-%m-%d")
test_long <- test_long %>%
group_by(state, day_cases, state_total) %>%
distinct(date)
filter_long <- test_long %>% filter(state=="california")
ggplot(filter_long, aes(x=date, y=state_total)) + geom_line()
ggplot(filter_long, aes(x=date, y=state_total)) + geom_line()
View(filter_long)
filter_long <- test_long %>% filter(state=="California")
ggplot(filter_long, aes(x=date, y=state_total)) + geom_line()
ggplot(filter_long, aes(x=date, y=day_cases)) + geom_line()
View(test_long)
test_long <- test_long %>%
group_by(date) %>%
mutate(US_total = sum(state_total))
View(test_long)
testdata <- covid19.US.data()
testdata <- testdata %>% select(-c(Country_Region, Lat, Long_))
test_long <- testdata %>% melt(id.vars="Province_State")
test_long <- rename(test_long,
state = Province_State,
date = variable,
day_cases = value)
# test_long$state <- tolower(test_long)
test_long <- test_long %>%
group_by(state, date) %>%
mutate(state_total = sum(day_cases))
test_long$date <- as.Date(test_long$date, format = "%Y-%m-%d")
test_long <- test_long %>%
group_by(state, day_cases, state_total) %>%
distinct(date)
test_long2 <- test_long %>%
group_by(state, date) %>%
mutate(US_total = sum(state_total))
View(test_long2)
test_long2 <- test_long %>%
group_by(date) %>%
mutate(US_total = sum(state_total))
test_long2 <- test_long %>%
group_by(date, day_cases) %>%
mutate(US_total = sum(state_total))
test_long2 <- test_long %>%
group_by(state, date, day_cases) %>%
mutate(US_total = sum(state_total))
test_long2 <- test_long %>%
group_by(state, date) %>%
mutate(US_total = sum(state_total))
View(test_long2)
test_long <- test_long %>%
group_by(state, state_total) %>%
distinct(date)
View(test_long)
test_long2 <- test_long %>%
group_by(state, date) %>%
mutate(US_total = sum(state_total))
View(test_long2)
test_long2 <- test_long %>%
group_by(date) %>%
mutate(US_total = sum(state_total))
test_long <- test_long %>%
group_by(date) %>%
mutate(US_total = sum(state_total))
# ONLY TRACKS STATE NEW CASES, not deaths or true total
filter_long <- test_long %>% filter(state=="California")
ggplot(filter_long, aes(x=date, y=state_total)) + geom_line()
ggplot(test_long, aes(x=date, y=US_total)) + geom_line()
library(maps)
state_map <- read.csv("data/state_map.csv")
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=test_long, aes(map_id= region, fill=US_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
View(state_map)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=test_long, aes(map_id= state, fill=US_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
test_long %>% filter(US_total <0)
View(test_long)
date_filt <- test_long %>% filter(date=="2020-12-02")
View(date_filt)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= state, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
testdata <- covid19.US.data()
testdata <- testdata %>% select(-c(Country_Region, Lat, Long_))
test_long <- testdata %>% melt(id.vars="Province_State")
test_long <- rename(test_long,
region = Province_State,
date = variable,
day_cases = value)
# test_long$state <- tolower(test_long)
test_long <- test_long %>%
group_by(region, date) %>%
mutate(state_total = sum(day_cases))
test_long$date <- as.Date(test_long$date, format = "%Y-%m-%d")
test_long <- test_long %>%
group_by(region, state_total) %>%
distinct(date)
test_long <- test_long %>%
group_by(date) %>%
mutate(US_total = sum(state_total))
# ONLY TRACKS STATE NEW CASES, not deaths or true total
filter_long <- test_long %>% filter(region=="California")
ggplot(filter_long, aes(x=date, y=state_total)) + geom_line()
ggplot(test_long, aes(x=date, y=US_total)) + geom_line()
library(maps)
state_map <- read.csv("data/state_map.csv")
date_filt <- test_long %>% filter(date=="2020-12-02")
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= region, fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat)
View(date_filt)
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= tolower(region), fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat)
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=date_filt, aes(map_id= tolower(region), fill=state_total), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_distiller("Case Count", palette="YlOrRd", direction=1) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("Covid Count Map")
