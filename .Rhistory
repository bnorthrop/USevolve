<<<<<<< HEAD
"KS"="kansas",
"KY"="kentucky",
"LA"="louisiana",
"ME"="maine",
"MD"="maryland",
"MA"="massachusetts",
"MI"="michigan",
"MN"="minnesota",
"MS"="mississippi",
"MO"="missouri",
"MT"="montana",
"NE"="nebraska",
"NV"="nevada",
"NH"="new hampshire",
"NJ"="new jersey",
"NM"="new mexico",
"NY"="new york",
"NC"="north carolina",
"ND"="north dakota",
"OH"="ohio",
"OK"="oklahoma",
"OR"="oregon",
"PA"="pennsylvania",
"RI"="rhode island",
"SC"="south carolina",
"SD"="south dakota",
"TN"="tennessee",
"TX"="texas",
"UT"="utah",
"VT"="vermont",
"VA"="virginia",
"WA"="washington",
"WV"="west virginia",
"WI"="wisconsin",
"WY"="wyoming"))
`%notin%` <- Negate(`%in%`)
covid <- subset(covid, region %notin% c("RMI", "AS", "NYC", "PR", "DC",
"HI", "AK", "GU", "VI", "MP", "FSM", "PW"))
covid <- covid %>% select(-c(conf_cases, prob_cases, pnew_case,
conf_death, prob_death, pnew_death,
created_at, consent_cases, consent_deaths))
# Find total US cases from state sums
df <- data.frame(matrix(vector(), 0, 10,
dimnames=list(c(), c("date", "region", "tot_cases",
"new_cases", "tot_death", "new_death", "us_tot_cases",
"us_new_cases", "us_tot_death", "us_new_death"))))
for (i in 1:length(unique(covid$date))){
filtered_data <- covid %>%
filter(date==date[[i]]) %>%
mutate(us_tot_cases = sum(tot_cases),
us_new_cases = sum(new_case),
us_tot_death = sum(tot_death),
us_new_death = sum(new_death))
df <- rbind(df, filtered_data)
filtered_data <- data.frame(matrix(vector(), 0, 10))
}
covid <- df
}
covid_update()
covid_update <- function(){
=======
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$candidate)
}
if(label=="party"){
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner(Year = 1988)
state_winner(Year = 2000, states=c("texas", "oklahoma"))
state_winner(Year = 2000, states=c("texas", "oklahoma"), label="party")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner(Year = 1988)
# Create function
state_winner <- function(Year=2016, states=c(), label="candidate"){
state_winner <- function(Year=2016, states=c(), label="candidate"){
>>>>>>> upstream/master
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner(label="party")
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
<<<<<<< HEAD
library(USevolve)
county_winner()
library(pkgdown)
build_site()
library(USevolve)
build_site()
View(state_map)
View(county_map)
elect_count(level="county", states = c("connecticut", "rhode island"), log=F)
library(USevolve)
build_site()
state_winner(states=c("california", "nevada", "arizona"))
state_winner(states=c("california", "nevada", "arizona", "utah"))
# Create Function
county_winner <- function(Year=2016, states=c()){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- county_map
county_pres <- county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)     ## ISSUE IN SLICE_MAX
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year)
=======
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner()
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
sta
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
# state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
>>>>>>> upstream/master
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
<<<<<<< HEAD
stop("Must enter valid election year starting in 2000")
}
}
county_winner()
library(USevolve)
county_winner()
library(USevolve)
county_winner()
# Create Function
county_winner <- function(Year=2016, states=c()){
require(maps)
require(dplyr)
require(ggplot2)
require(devtools)
# load data
county_map <- USevolve:::county_map
county_pres <- USevolve:::county_pres
county_election_years <- c(2000, 2004, 2008, 2012, 2016)
if(Year %in% county_election_years){
county_pres <- na.omit(county_pres)
county_pres$party[county_pres$party != "democrat" & county_pres$party != "republican"] <- "other"
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(county_pres$party)
###########
if(length(states)==0){
county_majority <- county_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(county_percent)     ## ISSUE IN SLICE_MAX
} else{
county_map <- county_map %>%
filter(state %in% states)
county_majority <- county_pres %>%
filter(state %in% states, year==Year) %>%
group_by(region) %>%
slice_max(county_percent)
}
ggplot()+
geom_map(data=county_map, aes(map_id= region), map = county_map) +
geom_map(data=county_majority, aes(map_id= region, fill=party), map = county_map) +
expand_limits(x = county_map$long, y = county_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("County Winner Map", Year)
=======
stop("Must enter valid election year starting in 1976")
}
}
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
sta
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
# state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
stop("Must enter valid election year starting in 1976")
}
}
state_winner <- function(Year=2016, states=c(), label="candidate"){
require(dplyr)
require(ggplot2)
require(maps)
state_map <- USevolve:::state_map
state_pres <- USevolve:::state_pres
state_pres$party[state_pres$party=="democratic-farmer-labor"] <- "democrat"
state_election_years <- c(1976, 1980, 1984, 1988, 1992, 1996, 2000, 2004, 2008, 2012, 2016)
if(Year %in% state_election_years){
############
if(length(states)==0){
state_majority <- state_pres %>%
filter(year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
} else{
state_map <- state_map %>%
filter(region %in% states)
state_majority <- state_pres %>%
filter(region %in% states, year==Year) %>%
group_by(region) %>%
slice_max(state_percent)
}
state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
if(state_majority$party[[1]]=="democrat"){
partycolor <- c("red1", "blue2", "yellow")
names(partycolor) <- unique(state_majority$party)
}
else if(state_majority$party[[1]]=="republican"){
partycolor <- c("blue2", "red1", "yellow")
names(partycolor) <- unique(state_majority$party)
}
if(label=="party"){
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=party), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "party", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
else{
# state_majority$party[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
# state_majority$candidate[state_majority$party != "democrat" & state_majority$party != "republican"] <- "other"
ggplot()+
geom_map(data=state_map, aes(map_id= region), map = state_map) +
geom_map(data=state_majority, aes(map_id= region, fill=candidate), map = state_map) +
expand_limits(x = state_map$long, y = state_map$lat) +
scale_fill_manual(name = "candidate", values = partycolor) +
coord_map("albers", lat0=30, lat1=40) +
ggtitle("State Winner Map", Year) + xlab("Longitude") + ylab("Latitude")
}
>>>>>>> upstream/master
}
else if(Year == 2020){
stop("Data not yet available")
}
else{
<<<<<<< HEAD
stop("Must enter valid election year starting in 2000")
}
}
county_winner()
library(USevolve)
county_winner()
covid_growth()
covid_map()
state_winner()
elect_count()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(USevolve)
state_winner()
county_winner()
load("~/USevolve/R/sysdata.rda")
View(state_map)
View(county_pres)
elect_count()
library(USevolve)
elect_count()
=======
stop("Must enter valid election year starting in 1976")
}
}
>>>>>>> upstream/master
