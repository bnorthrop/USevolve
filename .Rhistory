"WI"="wisconsin",
"WY"="wyoming"))
`%notin%` <- Negate(`%in%`)
covid <- subset(covid, region %notin% c("RMI", "AS", "NYC", "PR", "DC",
"HI", "AK", "GU", "VI", "MP", "FSM", "PW"))
covid <- covid %>% select(-c(conf_cases, prob_cases, pnew_case,
conf_death, prob_death, pnew_death,
created_at, consent_cases, consent_deaths))
covid$date <- as.Date(covid$date, format="%m/%d/%Y")
# Find total US cases from state sums
df <- data.frame(matrix(vector(), 0, 7,
dimnames=list(c(), c("date", "region", "tot_cases",
"new_case", "tot_death", "new_death", "us_total"))))
for (i in 1:length(unique(covid$date))){
filtered_data <- covid %>%
filter(date==date[[i]]) %>%
mutate(us_total = sum(tot_cases))
df <- rbind(df, filtered_data)
filtered_data <- data.frame(matrix(vector(), 0, 7))
}
return(df)
}
covid_growth <- function(states=c(), Value, sum=FALSE, df_print=FALSE){
require(dplyr)
require(ggplot2)
require(plotly)
# OLD WAY OF LOADING DATA
# covid <- read.csv("data/US Covid (to Nov8).csv")
# covid$date <- as.Date(covid$date, format = "%Y-%m-%d")
#load latest covid data
covid <- covid_update()
if(missing(Value)){
Value <- "tot_cases"
}
if(sum==TRUE){
if(length(states)==0){
if(Value=="tot_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
} else if(Value=="tot_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
plot <- ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Combined Total -", Value) + xlab("Date") + ylab("Count")
ggplotly(plot)
}
else{
if (length(states)==0){
filtered_data <- covid
} else{
filtered_data <- covid %>%
filter(region %in% states)
}
returned_data <- filtered_data %>%
select(date, region,
# tot_cases,
new_case)
# tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
if(Value=="tot_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Total Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_case, col=region)) +
ggtitle("New Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="tot_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_death, col=region)) +
ggtitle("Total Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_death, col=region)) +
ggtitle("New Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
}
}
covid_growth(df_print=T, sum=T)
# MAKE SURE OTHER FUNCTIONS CAN USE THIS WITHOUT EXPORTING TO USER
covid_update <- function(){
require(dplyr)
require(plyr)
covid <- read.csv("https://data.cdc.gov/api/views/9mfq-cb36/rows.csv?accessType=DOWNLOAD")
names(covid)[names(covid) == "submission_date"] <- "date"
names(covid)[names(covid) == "state"] <- "region"
covid$region <- revalue(covid$region, c("AL" = "alabama",
"AZ" = "arizona",
"AR"="arkansas",
"CA"="california",
"CO"="colorado",
"CT"="connecticut",
"DE"="delaware",
"FL"="florida",
"GA"="georgia",
"ID"="idaho",
"IL"="illinois",
"IN"="indiana",
"IA"="iowa",
"KS"="kansas",
"KY"="kentucky",
"LA"="louisiana",
"ME"="maine",
"MD"="maryland",
"MA"="massachusetts",
"MI"="michigan",
"MN"="minnesota",
"MS"="mississippi",
"MO"="missouri",
"MT"="montana",
"NE"="nebraska",
"NV"="nevada",
"NH"="new hampshire",
"NJ"="new jersey",
"NM"="new mexico",
"NY"="new york",
"NC"="north carolina",
"ND"="north dakota",
"OH"="ohio",
"OK"="oklahoma",
"OR"="oregon",
"PA"="pennsylvania",
"RI"="rhode island",
"SC"="south carolina",
"SD"="south dakota",
"TN"="tennessee",
"TX"="texas",
"UT"="utah",
"VT"="vermont",
"VA"="virginia",
"WA"="washington",
"WV"="west virginia",
"WI"="wisconsin",
"WY"="wyoming"))
`%notin%` <- Negate(`%in%`)
covid <- subset(covid, region %notin% c("RMI", "AS", "NYC", "PR", "DC",
"HI", "AK", "GU", "VI", "MP", "FSM", "PW"))
covid <- covid %>% select(-c(conf_cases, prob_cases, pnew_case,
conf_death, prob_death, pnew_death,
created_at, consent_cases, consent_deaths))
covid$date <- as.Date(covid$date, format="%m/%d/%Y")
# Find total US cases from state sums
df <- data.frame(matrix(vector(), 0, 7,
dimnames=list(c(), c("date", "region", "tot_cases",
"new_case", "tot_death", "new_death", "us_total"))))
for (i in 1:length(unique(covid$date))){
filtered_data <- covid %>%
filter(date==date[[i]]) %>%
mutate(us_total = sum(tot_cases))
df <- rbind(df, filtered_data)
filtered_data <- data.frame(matrix(vector(), 0, 7))
}
return(df)
}
# GET TO PROPERLY USE covid_update FUNCTION
covid_growth <- function(states=c(), Value, sum=FALSE, df_print=FALSE){
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- covid_update()
if(missing(Value)){
Value <- "tot_cases"
}
if(sum==TRUE){
if(length(states)==0){
if(Value=="tot_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
} else if(Value=="tot_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
plot <- ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Combined Total -", Value) + xlab("Date") + ylab("Count")
ggplotly(plot)
}
else{
if (length(states)==0){
filtered_data <- covid
} else{
filtered_data <- covid %>%
filter(region %in% states)
}
returned_data <- filtered_data %>%
select(date, region,
# tot_cases,
new_case)
# tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
if(Value=="tot_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Total Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_case, col=region)) +
ggtitle("New Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="tot_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_death, col=region)) +
ggtitle("Total Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_death, col=region)) +
ggtitle("New Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
}
}
covid_growth(df_print=T, sum=T)
covid_growth(Value="tot_cases", df_print=F, sum=T)
covid_growth(states=c("colorado", "nevada", "florida", "california"))
# GET TO PROPERLY USE covid_update FUNCTION
covid_growth <- function(states=c(), Value, sum=FALSE, df_print=FALSE){
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- covid_update()
if(missing(Value)){
Value <- "tot_cases"
}
if(sum==TRUE){
if(length(states)==0){
if(Value=="tot_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
} else if(Value=="tot_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
plot <- ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Combined Total -", Value) + xlab("Date") + ylab("Count")
ggplotly(plot)
}
else{
if (length(states)==0){
filtered_data <- covid
} else{
filtered_data <- covid %>%
filter(region %in% states)
}
returned_data <- filtered_data %>%
select(date, region,
# tot_cases,
new_case)
# tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
if(Value=="tot_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Covid Cases by State") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_case, col=region)) +
ggtitle("New Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="tot_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_death, col=region)) +
ggtitle("Total Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_death, col=region)) +
ggtitle("New Covid Deaths") + xlab("Date") + ylab("Count")
ggplotly(plot) }
}
}
covid_growth(df_print=T, sum=T)
covid_growth(Value="tot_cases", df_print=F, sum=T)
covid_growth(states=c("colorado", "nevada"), sum=T)
# GET TO PROPERLY USE covid_update FUNCTION
covid_growth <- function(states=c(), Value, sum=FALSE, df_print=FALSE){
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- covid_update()
if(missing(Value)){
Value <- "tot_cases"
}
if(sum==TRUE){
if(length(states)==0){
if(Value=="tot_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
} else if(Value=="tot_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_cases)) }
else if(Value=="new_cases"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_case)) }
else if(Value=="tot_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(tot_death)) }
else if(Value=="new_death"){
filtered_data <- covid %>%
filter(region %in% states) %>%
group_by(date) %>%
mutate(combined_total = sum(new_death)) }
returned_data <- filtered_data %>%
select(date, combined_total)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
plot <- ggplot(filtered_data) +
geom_line(aes(x=date, y=combined_total)) +
ggtitle("Total Covid Cases") + xlab("Date") + ylab("Count")
ggplotly(plot)
}
else{
if (length(states)==0){
filtered_data <- covid
} else{
filtered_data <- covid %>%
filter(region %in% states)
}
returned_data <- filtered_data %>%
select(date, region,
# tot_cases,
new_case)
# tot_death, new_death)
if(df_print==TRUE){
print(as.data.frame(returned_data))}
if(Value=="tot_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_cases, col=region)) +
ggtitle("Total Covid Cases by State") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_cases"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_case, col=region)) +
ggtitle("New Covid Cases by State") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="tot_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=tot_death, col=region)) +
ggtitle("Total Covid Deaths by State") + xlab("Date") + ylab("Count")
ggplotly(plot) }
else if(Value=="new_death"){
plot <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=new_death, col=region)) +
ggtitle("New Covid Deaths by State") + xlab("Date") + ylab("Count")
ggplotly(plot) }
}
}
covid_growth(states=c("colorado", "nevada", "florida", "california"))
covid_growth(Value="tot_death", states=-c("colorado", "nevada", "florida", "california"))
