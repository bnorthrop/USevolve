#     group_by(date) %>%
#     mutate(combined_total = sum(tot_death)) }
# else if(Value=="new_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_death)) }
#
#   else{
#     filtered_data <- covid %>%
#       filter(region %in% states) %>%
#       group_by(date)
#
#     # Find total US cases from state sums
#     df <- data.frame(matrix(vector(), 0, 14,
#                             dimnames=list(c(), c("date", "region", "tot_cases",
#                                                  "new_case", "tot_death", "new_death", "us_total_cases",
#                                                  "us_new_cases", "us_total_death", "us_new_death",
#                                                  "subset_total_cases", "subset_new_cases",
#                                                  "subset_total_death", "subset_new_death"))))
#
#     for (i in 1:length(unique(covid$date))){
#       subset_data <- filtered_data %>%
#         filter(date==date[[i]]) %>%
#         mutate(subset_total_cases = sum(tot_cases),
#                subset_new_cases = sum(new_case),
#                subset_total_death = sum(tot_death),
#                subset_new_death = sum(new_death))
#
#       df <- rbind(df, subset_data)
#
#       subset_data <- data.frame(matrix(vector(), 0, 14))
#     }
#     filtered_data <<- df
#   }
#
#   # else if(Value=="tot_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_cases)) }
#   # else if(Value=="new_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_case)) }
#   # else if(Value=="tot_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_death)) }
#   # else if(Value=="new_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_death)) }
#
#   # returned_data <- filtered_data %>%
#   #   select(date, combined_total)
#   # if(df_print==TRUE){
#   #   print(as.data.frame(returned_data))}
#
#   plot <- ggplot(filtered_data) +
#     geom_line(aes(x=date, y=combined_total), ...) +
#     ggtitle("Total Covid Cases - United States") + xlab("Date") + ylab("Count")
#   ggplotly(plot)
#
}
else if(combined==FALSE) {
if (length(states)==0 | missing(states)) {
filtered_data <- covid
}
else{
filtered_data <- covid %>%
filter(region %in% states)
}
if(value=="tot_cases"){
Value <- filtered_data$tot_cases }
else if(value=="new_cases"){
Value <- filtered_data$new_case }
else if(value=="tot_death"){
Value <- filtered_data$tot_death }
else if(value=="new_death"){
Value <- filtered_data$new_death }
if(df_print==TRUE){
returned_data <- filtered_data %>%
select(date, region, value)
print(as.data.frame(returned_data))}
plotgraph <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=Value, col=region)) +
ggtitle("Occurance by State", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
}
covid_growth <- function(states=c(), value, combined=T, df_print=FALSE, ...) {
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- USevolve:::covid_update()
if(missing(value)){
value <- "tot_cases" }
## ISSUE WITH COMBINED == T
if(combined==TRUE) {
if(length(states)==0 | missing(states)){
if(value=="tot_cases"){
Value <- covid$us_tot_cases }
else if(value=="new_cases"){
Value <- covid$us_new_cases }
else if(value=="tot_death"){
Value <- covid$us_tot_death }
else if(value=="new_death"){
Value <- covid$us_new_death }
# else{
#   stop("Please print valid value (statistic) to measure.") }
if(df_print==TRUE){
returned_data <- covid %>%
select(date, value)
print(as.data.frame(returned_data))}
plotgraph <- ggplot(covid) +
geom_line(aes(x=date, y=Value)) +
ggtitle("Total Covid Cases - United States") + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
# if(Value=="tot_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_cases)) }
# else if(Value=="new_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_case)) }
# else if(Value=="tot_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_death)) }
# else if(Value=="new_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_death)) }
#
#   else{
#     filtered_data <- covid %>%
#       filter(region %in% states) %>%
#       group_by(date)
#
#     # Find total US cases from state sums
#     df <- data.frame(matrix(vector(), 0, 14,
#                             dimnames=list(c(), c("date", "region", "tot_cases",
#                                                  "new_case", "tot_death", "new_death", "us_total_cases",
#                                                  "us_new_cases", "us_total_death", "us_new_death",
#                                                  "subset_total_cases", "subset_new_cases",
#                                                  "subset_total_death", "subset_new_death"))))
#
#     for (i in 1:length(unique(covid$date))){
#       subset_data <- filtered_data %>%
#         filter(date==date[[i]]) %>%
#         mutate(subset_total_cases = sum(tot_cases),
#                subset_new_cases = sum(new_case),
#                subset_total_death = sum(tot_death),
#                subset_new_death = sum(new_death))
#
#       df <- rbind(df, subset_data)
#
#       subset_data <- data.frame(matrix(vector(), 0, 14))
#     }
#     filtered_data <<- df
#   }
#
#   # else if(Value=="tot_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_cases)) }
#   # else if(Value=="new_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_case)) }
#   # else if(Value=="tot_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_death)) }
#   # else if(Value=="new_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_death)) }
#
#   # returned_data <- filtered_data %>%
#   #   select(date, combined_total)
#   # if(df_print==TRUE){
#   #   print(as.data.frame(returned_data))}
#
#   plot <- ggplot(filtered_data) +
#     geom_line(aes(x=date, y=combined_total), ...) +
#     ggtitle("Total Covid Cases - United States") + xlab("Date") + ylab("Count")
#   ggplotly(plot)
#
}
else if(combined==FALSE) {
if (length(states)==0 | missing(states)) {
filtered_data <- covid
}
else{
filtered_data <- covid %>%
filter(region %in% states)
}
if(value=="tot_cases"){
Value <- filtered_data$tot_cases }
else if(value=="new_cases"){
Value <- filtered_data$new_case }
else if(value=="tot_death"){
Value <- filtered_data$tot_death }
else if(value=="new_death"){
Value <- filtered_data$new_death }
if(df_print==TRUE){
returned_data <- filtered_data %>%
select(date, region, value)
print(as.data.frame(returned_data))}
plotgraph <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=Value, col=region)) +
ggtitle("Occurance by State", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
}
covid_growth(states=c("colorado", "nevada", "florida", "california"), combined=F)
covid_growth(value="tot_cases", df_print=F)
covid_growth(df_print=T, combined=T)
covid_growth(value="new_cases", df_print=F, combined=T)
covid_growth(value="new_death", df_print=F, combined=T)
covid_growth(value="tot_death", df_print=F, combined=T)
covid_growth <- function(states=c(), value, combined=T, df_print=FALSE, ...) {
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- USevolve:::covid_update()
if(missing(value)){
value <- "tot_cases" }
## ISSUE WITH COMBINED == T
if(combined==TRUE) {
if(length(states)==0 | missing(states)){
if(value=="tot_cases"){
Value <- covid$us_tot_cases }
else if(value=="new_cases"){
Value <- covid$us_new_cases }
else if(value=="tot_death"){
Value <- covid$us_tot_death }
else if(value=="new_death"){
Value <- covid$us_new_death }
# else{
#   stop("Please print valid value (statistic) to measure.") }
if(df_print==TRUE){
returned_data <- covid %>%
select(date, value)
print(as.data.frame(returned_data))}
plotgraph <- ggplot(covid) +
geom_line(aes(x=date, y=Value)) +
ggtitle("Total Count - United States - ", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
# if(Value=="tot_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_cases)) }
# else if(Value=="new_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_case)) }
# else if(Value=="tot_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_death)) }
# else if(Value=="new_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_death)) }
#
#   else{
#     filtered_data <- covid %>%
#       filter(region %in% states) %>%
#       group_by(date)
#
#     # Find total US cases from state sums
#     df <- data.frame(matrix(vector(), 0, 14,
#                             dimnames=list(c(), c("date", "region", "tot_cases",
#                                                  "new_case", "tot_death", "new_death", "us_total_cases",
#                                                  "us_new_cases", "us_total_death", "us_new_death",
#                                                  "subset_total_cases", "subset_new_cases",
#                                                  "subset_total_death", "subset_new_death"))))
#
#     for (i in 1:length(unique(covid$date))){
#       subset_data <- filtered_data %>%
#         filter(date==date[[i]]) %>%
#         mutate(subset_total_cases = sum(tot_cases),
#                subset_new_cases = sum(new_case),
#                subset_total_death = sum(tot_death),
#                subset_new_death = sum(new_death))
#
#       df <- rbind(df, subset_data)
#
#       subset_data <- data.frame(matrix(vector(), 0, 14))
#     }
#     filtered_data <<- df
#   }
#
#   # else if(Value=="tot_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_cases)) }
#   # else if(Value=="new_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_case)) }
#   # else if(Value=="tot_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_death)) }
#   # else if(Value=="new_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_death)) }
#
#   # returned_data <- filtered_data %>%
#   #   select(date, combined_total)
#   # if(df_print==TRUE){
#   #   print(as.data.frame(returned_data))}
#
#   plot <- ggplot(filtered_data) +
#     geom_line(aes(x=date, y=combined_total), ...) +
#     ggtitle("Total Covid Cases - United States") + xlab("Date") + ylab("Count")
#   ggplotly(plot)
#
}
else if(combined==FALSE) {
if (length(states)==0 | missing(states)) {
filtered_data <- covid
}
else{
filtered_data <- covid %>%
filter(region %in% states)
}
if(value=="tot_cases"){
Value <- filtered_data$tot_cases }
else if(value=="new_cases"){
Value <- filtered_data$new_case }
else if(value=="tot_death"){
Value <- filtered_data$tot_death }
else if(value=="new_death"){
Value <- filtered_data$new_death }
if(df_print==TRUE){
returned_data <- filtered_data %>%
select(date, region, value)
print(as.data.frame(returned_data))}
plotgraph <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=Value, col=region)) +
ggtitle("Occurance by State", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
}
covid_growth(value="new_cases", df_print=F, combined=T)
covid_growth <- function(states=c(), value, combined=T, df_print=FALSE, ...) {
require(dplyr)
require(ggplot2)
require(plotly)
#load latest covid data
covid <- USevolve:::covid_update()
if(missing(value)){
value <- "tot_cases" }
## ISSUE WITH COMBINED == T
if(combined==TRUE) {
if(length(states)==0 | missing(states)){
if(value=="tot_cases"){
Value <- covid$us_tot_cases }
else if(value=="new_cases"){
Value <- covid$us_new_cases }
else if(value=="tot_death"){
Value <- covid$us_tot_death }
else if(value=="new_death"){
Value <- covid$us_new_death }
# else{
#   stop("Please print valid value (statistic) to measure.") }
if(df_print==TRUE){
returned_data <- covid %>%
select(date, value)
print(as.data.frame(returned_data))}
plotgraph <- ggplot(covid) +
geom_line(aes(x=date, y=Value)) +
ggtitle("Total Count (United States) - ", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
# if(Value=="tot_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_cases)) }
# else if(Value=="new_cases"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_case)) }
# else if(Value=="tot_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(tot_death)) }
# else if(Value=="new_death"){
#   filtered_data <- covid %>%
#     group_by(date) %>%
#     mutate(combined_total = sum(new_death)) }
#
#   else{
#     filtered_data <- covid %>%
#       filter(region %in% states) %>%
#       group_by(date)
#
#     # Find total US cases from state sums
#     df <- data.frame(matrix(vector(), 0, 14,
#                             dimnames=list(c(), c("date", "region", "tot_cases",
#                                                  "new_case", "tot_death", "new_death", "us_total_cases",
#                                                  "us_new_cases", "us_total_death", "us_new_death",
#                                                  "subset_total_cases", "subset_new_cases",
#                                                  "subset_total_death", "subset_new_death"))))
#
#     for (i in 1:length(unique(covid$date))){
#       subset_data <- filtered_data %>%
#         filter(date==date[[i]]) %>%
#         mutate(subset_total_cases = sum(tot_cases),
#                subset_new_cases = sum(new_case),
#                subset_total_death = sum(tot_death),
#                subset_new_death = sum(new_death))
#
#       df <- rbind(df, subset_data)
#
#       subset_data <- data.frame(matrix(vector(), 0, 14))
#     }
#     filtered_data <<- df
#   }
#
#   # else if(Value=="tot_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_cases)) }
#   # else if(Value=="new_cases"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_case)) }
#   # else if(Value=="tot_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(tot_death)) }
#   # else if(Value=="new_death"){
#   #   filtered_data <- covid %>%
#   #     filter(region %in% states) %>%
#   #     group_by(date) %>%
#   #     mutate(combined_total = sum(new_death)) }
#
#   # returned_data <- filtered_data %>%
#   #   select(date, combined_total)
#   # if(df_print==TRUE){
#   #   print(as.data.frame(returned_data))}
#
#   plot <- ggplot(filtered_data) +
#     geom_line(aes(x=date, y=combined_total), ...) +
#     ggtitle("Total Covid Cases - United States") + xlab("Date") + ylab("Count")
#   ggplotly(plot)
#
}
else if(combined==FALSE) {
if (length(states)==0 | missing(states)) {
filtered_data <- covid
}
else{
filtered_data <- covid %>%
filter(region %in% states)
}
if(value=="tot_cases"){
Value <- filtered_data$tot_cases }
else if(value=="new_cases"){
Value <- filtered_data$new_case }
else if(value=="tot_death"){
Value <- filtered_data$tot_death }
else if(value=="new_death"){
Value <- filtered_data$new_death }
if(df_print==TRUE){
returned_data <- filtered_data %>%
select(date, region, value)
print(as.data.frame(returned_data))}
plotgraph <- filtered_data %>%
group_by(region) %>%
ggplot() +
geom_line(aes(x=date, y=Value, col=region)) +
ggtitle("Occurance by State", value) + xlab("Date") + ylab("Count")
ggplotly(plotgraph)
}
}
covid_growth(combined=T)
covid_growth(combined=T)
covid_growth(states=c("colorado", "nevada"))
covid_growth(value="new_cases", states=c("colorado", "nevada", "florida", "california"), combined=F)
covid_growth(value="tot_death", states=c("colorado", "nevada", "florida", "california"), combined=F)
